package com.otn.webservice.com.inspur;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import java.io.FileInputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Properties;
import java.util.logging.Logger;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.1.3-hudson-390-
 * Generated source version: 2.0
 * <p>
 * An example of how this class may be used:
 * 
 * <pre>
 * ResourceServiceService service = new ResourceServiceService();
 * ResourceServiceDelegate portType = service.getResourceServicePort();
 * portType.getChannel(...);
 * </pre>
 * 
 * </p>
 * 
 */
@WebServiceClient(name = "ResourceServiceService", targetNamespace = "http://inspur.com/", wsdlLocation = "http://10.114.223.15/resourceWebService/ResourceServicePort?wsdl")
public class ResourceServiceService extends Service {

    private final static URL RESOURCESERVICESERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger
            .getLogger(ResourceServiceService.class.getName());


    static {
        URL url = null;
        Properties prop = new Properties();
        try {
            String filepath = Thread.currentThread().getContextClassLoader().getResource("").getPath();

            prop.load(new FileInputStream(filepath + "webServiceConfig.properties"));
        } catch (IOException e) {
            e.printStackTrace();
        }
        String WebService_url = prop.getProperty("webservice_url");
        try {
            URL baseUrl;
            baseUrl = ResourceServiceService.class.getResource(".");
            url = new URL(baseUrl, WebService_url);
        } catch (MalformedURLException e) {
            logger.warning("无法连接到远程WebService地址: " + WebService_url);
            logger.warning(e.getMessage());
        } catch (IOException e) {
            logger.warning(e.getMessage());
        }
        RESOURCESERVICESERVICE_WSDL_LOCATION = url;
    }

    public ResourceServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ResourceServiceService() {
        super(RESOURCESERVICESERVICE_WSDL_LOCATION, new QName(
                "http://inspur.com/", "ResourceServiceService"));
    }

    /**
     * @return returns ResourceServiceDelegate
     */
    @WebEndpoint(name = "ResourceServicePort")
    public ResourceServiceDelegate getResourceServicePort() {
        return super.getPort(new QName("http://inspur.com/",
                "ResourceServicePort"), ResourceServiceDelegate.class);
    }

}
